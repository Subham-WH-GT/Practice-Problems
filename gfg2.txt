#  Count Occurences of Anagrams
	


int search(string pat, string txt) {
	    // code here
	    int m=pat.length();
	    int ana=0;
	    int n=txt.length();
	    vector<int>vec(26,0);
	    
	    for(int i=0;i<pat.length();i++){
	         char ch=pat[i];
	         
	         vec[ch-'a']++;
	    }
	    
	    int i=0;
	    int j=0;
	    
	   // while(j-i+1 <= pat.length()){
	   //     vec[txt[j]-'a']--;
	   //     j++;
	   // }
	   while(true) {
	       vec[txt[j]-'a']--;
	       if(j-i == m-1) break;
	       j++;
	   }
            int mini= *min_element(vec.begin(),vec.end());
	        int maxi= *max_element(vec.begin(),vec.end());
	        
	        if(mini==0 and maxi==0) ana++;
	        j++;
	   
	    
	    while(j<n){
	       // int mini= *min_element(vec.begin(),vec.end());
	       // int maxi= *max_element(vec.begin(),vec.end());
	        
	       // if(mini==0 and maxi==0){
	       //     ana++;
	       // }
	        
	       // j++;
	        vec[txt[j]-'a']--;
	        vec[txt[i]-'a']++;
	        i++;
	        
	        int mini= *min_element(vec.begin(),vec.end());
	        int maxi= *max_element(vec.begin(),vec.end());
	        
	        if(mini==0 and maxi==0)ana++;
	        j++;
	        
	    }
	    
	    return ana;
	}