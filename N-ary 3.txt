## Level order Traversal -->



#include<iostream>
#include <vector>
#include<queue>
using namespace std;

struct Node{
  int val;
  vector<Node*>children;
  
};

// Node* newNode(int key){
//     Node
// }
Node* newNode(int key)
{
    Node* temp = new Node;
    temp->val = key;
    return temp;
}

vector<vector<int>> levelTraverse(Node* root){
    
    vector<vector<int>>ans;
    queue<Node*>q;
    q.push(root);
    
    while(!q.empty()){
        vector<int>temp;
        int n=q.size();
        while(n--){
            Node* node=q.front();
            q.pop();
            temp.push_back(node->val);
            for(auto v:node->children){
                q.push(v);
            }
        }
        ans.push_back(temp);
    }
    return ans;
}

int main(){
    Node* root=newNode(1);
    root->children.push_back(newNode(3));
     root->children.push_back(newNode(2));
      root->children.push_back(newNode(4));
    
    root->children[0]->children.push_back(newNode(5)); 
    root->children[0]->children.push_back(newNode(6));  
    
    vector<vector<int>>ans=levelTraverse(root);
    
    for(auto &v:ans){
        for(int x:v){
            cout<<x<<" ";
        }
        cout<<endl;
    }
    return 0;
}