# WildCard pattern matching 

int n,m;
    int dp[201][201];
    
    int solve(string& pat,int i, string& str, int j){
        
        if(i>=n and j>=m) return 1;
        // if(j>=m and pat.substr())
        if(i>=n || (j>=m and pat[i]!='*')) return 0;
        
        if(dp[i][j] != -1) return dp[i][j];
        
        int ans=0;
        
        if(pat[i]==str[j]){
            ans=ans || solve(pat,i+1,str,j+1);
        }
        
        else if(pat[i]=='*'){
            for(int x=j;x<=m;x++){
                ans=ans|| solve(pat,i+1,str,x+1);
            }
            
            ans=ans|| solve(pat,i+1,str,j);
        }
        
        else if(pat[i]=='?'){
            ans=ans || solve(pat,i+1,str,j+1);
        }
        
        return dp[i][j]=ans;
        
    }
    
    int wildCard(string pat, string str) {
        // code here
        
        n=pat.length();
        m=str.length();
        memset(dp,-1,sizeof(dp));
        return solve(pat,0,str,0);
    }