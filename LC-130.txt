 int n;
    int m;

    void dfs(vector<vector<char>>& vec, int i, int j){
        
        if(i<0||i>=n || j<0 || j>=m ||  vec[i][j]!='O') return;
        vec[i][j]='B';

        dfs(vec,i+1,j);
        dfs(vec,i-1,j);
        dfs(vec,i,j+1);
        dfs(vec,i,j-1);
    }

    void solve(vector<vector<char>>& vec) {

        n=vec.size();
        m=vec[0].size();

        for(int j=0;j<m;j++){
            if(vec[0][j]=='O'){
                dfs(vec,0,j);
            }
        }

        for(int j=0;j<m;j++){
            if(vec[n-1][j]=='O'){
                dfs(vec,n-1,j);
            }
        }

        for(int i=0;i<n;i++){
            if(vec[i][0]=='O'){
                dfs(vec,i,0);
            }
        }

        for(int i=0;i<n;i++){
            if(vec[i][m-1]=='O'){
                dfs(vec,i,m-1);
            }
        }

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(vec[i][j]=='B') vec[i][j]='O';

                else{
                    vec[i][j]='X';
                }
            }
        }
    }