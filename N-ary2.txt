## Pre and Post order traversal . . .

#include<iostream>
using namespace std;

struct Node{
  int data;
  struct Node** children;
  int length;
  
  Node(){
      data=0;
      length=0;
  }
  
  Node(int n, int val){
      children=new Node*();
      length=n;
      data=val;
  }
    
};

void postorder(Node *root){
    if(!root) return;
    
    int childs=root->length;
    for(int i=0;i<childs-1;i++){
        postorder(root->children[i]);
    }
    postorder(root->children[childs-1]);
    cout<<root->data<<" ";
    
}

void preorder(Node *root){
    
    if(root==NULL) return;
     cout<<root->data<<" ";
     
    int childs=root->length;
    for(int i=0;i<childs-1;i++){
        preorder(root->children[i]);
    }
    
   
    preorder(root->children[childs-1]);
}

int main(){
    int n=3;
    Node* root=new Node(n,1);
    root->children[0]=new Node(n,2);
    root->children[1]=new Node(n,3);
    root->children[2]=new Node(n,4);
    root->children[0]->children[0]=new Node(n,5);
    root->children[0]->children[1]=new Node(n,6);
    root->children[0]->children[2]=new Node(n,7);
    
    postorder(root);
    return 0;
}