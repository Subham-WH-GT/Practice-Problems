int ans=INT_MIN;
  
  
  void kadane_algo(vector<int>&vec){
     int maxi=INT_MIN;
     
     int sum=0;
     
     for(int i=0;i<vec.size();i++){
         sum+=vec[i];
         maxi=max(maxi,sum);
         if(sum<0) sum=0;
     }
     
     ans=max(ans,maxi);
     
  }
  
    int maximumSumRectangle(int R, int C, vector<vector<int>> M) {
        // code here
        vector<vector<int>>dp(R,vector<int>(C));
        
        for(int i=0;i<R;i++){
            for(int j=0;j<C;j++){
                if(j!=0){
                  dp[i][j]=dp[i][j-1]+M[i][j];  
                }
                
                else{
                    dp[i][j]=M[i][j];
                }
            }
        }
        vector<int>kadane_array(R);
        
       for(int j=0;j<C;j++){
           for(int r=0;r<R;r++){
               kadane_array[r]=M[r][j];
           }
           
           kadane_algo(kadane_array);
           
           for(int jj=j+1;jj<C;jj++){
               for(int r=0;r<R;r++){
                   if(j==0){
                       kadane_array[r]=dp[r][jj];
                   }
                   
                   else{
                       kadane_array[r]=dp[r][jj]-dp[r][j-1];
                   }
               }
               kadane_algo(kadane_array);
           }
       }
       
       return ans;
    }